//<auto-generated/>
using System;

namespace Algorithm
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Arithmatic programming");
            Console.WriteLine("----------------------");

            Console.WriteLine(" 1. All permutations of a String using iterative method and Recursion method");
            Console.WriteLine(" 2.Binary Search the Word from Word List");
            Console.WriteLine(" 3.Insertion sort in string");
            Console.WriteLine(" 4.Reads in integers prints them in sorted order using Bubble Sort");
            Console.WriteLine(" 5.Write a program to do Merge Sort of list of Strings.");
            Console.WriteLine(" 6. anagram of second is simply a rearrangement of the first");
            Console.WriteLine(" 7. Take a range of 0 - 1000 Numbers and find the Prime numbers in that range. ");
            Console.WriteLine(" 8. Extend the above program to find the prime numbers that are Anagram and Palindrome ");
            Console.WriteLine(" 9.Rewrite Use Generics for Search and Sort Algorithms");
            Console.WriteLine(" 10.Question to find your number");
            Console.WriteLine(" 11.maximum amount by which a task's completion time overshoots its deadline is minimized.");
            Console.WriteLine("12.replace of  String using Regex");       
                        
            int str = int.Parse(Console.ReadLine());
            switch (str)
            {
                case 1:
                    PermutationOfString.Permu();
                    break;
                case 2:
                    BinarySearch.Binary();
                    break;
                case 3:
                    InsertionSort.Insertion();
                    break;
                case 4:
                    BubbleSort.Bubble();
                    break;
                case 5:
                    MergeSort.Merge1();
                    break;
                case 6:
                    Anagram.Ana();
                    break;
                case 7:
                    PrimeNoRange.Prime1();
                    break;
                case 8:
                    PrimeAnagramPalindrome.PrimeNo();
                    break;
                //case 9:
                //    Distance.Dist();
                //    break;
                case 10:
                    MagicQuestion.Magic();
                    break;
                //case 11:
                //    WindChill.Wind();
                //    break;
                case 12:
                    StringFunctionRegex.ReplaceNo();
                    break;
                case 13:
                    regexxxxxxxxx.reee();
                    
                    break;               

                default:
                    break;

            }


        }
    }
    }

