////<auto-generated/>
//using System;
//using System.Collections.Generic;
//using System.Text;


//    class TikTakTeo2
//    {
//		public class TicTacToeTest
//		{

//			public static void main(String[] args)
//			{

//				TicTacToe t = new TicTacToe();
				
//				int x = 0, y = 0;
//				do
//				{
//					//Console.WriteLine(t.player == t.X ? "Player X turn" : "Player O turn");
//					Console.WriteLine("Enter x and y places");
//					x =int.Parse(Console.ReadLine());
//					y = int.Parse(Console.ReadLine());

//					t.putSign(x, y);
//					Console.WriteLine(t.toString());
//					Console.WriteLine("_____________________________");
//					t.displayWinner();

//				} while (t.isEmpty);
//			}
//		}

//		class TicTacToe
//		{
//			 const int X = 1, O = -1;
//			const int EMPTY = 0;

//			public int player = X;
//			private int[ , ] board = new int[3,3];
//			public bool isEmpty = false;

//			public void putSign(int x, int y)
//			{
//				if (x < 0 || x > 2 || y < 0 || y > 2)
//				{
//					Console.WriteLine("Invalid board position");
//					return;
//				}
//				if (board[x,y] != EMPTY)
//				{
//					Console.WriteLine("Board position occupied");
//					return;
//				}
//				board[x,y] = player;
//				player = -player;
//			}

//			public bool isWin(int player)
//			{
//				return ((board[0,0] + board[0,1] + board[0,2] == player * 3) ||
//						(board[1,0] + board[1,1] + board[1,2] == player * 3) ||
//						(board[2,0] + board[2,1] + board[2,2] == player * 3) ||
//						(board[0,0] + board[1,0] + board[2,0] == player * 3) ||
//						(board[0,1] + board[1,1] + board[2,1] == player * 3) ||
//						(board[0,2] + board[1,2] + board[2,2] == player * 3) ||
//						(board[0,0] + board[1,1] + board[2,2] == player * 3) ||
//						(board[2,0] + board[1,1] + board[0,2] == player * 3));
//			}

//			public void displayWinner()
//			{
//				if (isWin(X))
//				{
//					Console.WriteLine("\n X wins...!!");
//					isEmpty = false;
//				}
//				else if (isWin(O))
//				{
//					Console.WriteLine("\n O wins...!!");
//					isEmpty = false;
//				}
//				else
//				{
//					if (!isEmpty)
//					{
//						Console.WriteLine("its a tie");
//					}

//				}
//			}

//			public String toString()
//			{
//				StringBuilder s = new StringBuilder();
//				isEmpty = false;
//				for (int i = 0; i < 3; i++)
//				{
//					for (int j = 0; j < 3; j++)
//					{
//						switch (board[i,j])
//						{
//							case X:
//								s.Append(" X ");
//								break;
//							case O:
//								s.Append(" O ");
//								break;
//							case EMPTY:
//								s.Append("   ");
//								isEmpty = true;
//								break;
//						}
//						if (j < 2)
//						{
//							s.Append("|");
//						}

//					}
//					if (i < 2)
//					{
//						s.Append("\n-----------\n");
//					}
//				}
//				return s.ToString();
//			}
//		}
//	}

